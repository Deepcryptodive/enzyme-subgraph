enum PolicyIdentifierEnum {
  CUSTOM
  MAX_CONCENTRATION
  MAX_POSITIONS
  PRICE_TOLERANCE
  USER_WHITELIST
  ASSET_BLACKLIST
  ASSET_WHITELIST
}

enum FeeIdentifierEnum {
  CUSTOM
  MANAGEMENT
  PERFORMANCE
}

enum InvestmentChangeEventTypeEnum {
  ADDITION
  REDEMPTION
  REWARD
}

type Event @entity {
  id: ID!
  version: Version!
  fund: Fund
  name: String!
  contract: String!
  hash: String!
  from: String!
  timestamp: BigInt!
  block: BigInt!
}

type Version @entity {
  id: ID!
  funds: [Fund!]! @derivedFrom(field: "version")
  events: [Event!]! @derivedFrom(field: "version")
  assets: [Asset!]!
}

# type NetworkMetric @entity {
#   id: ID!
#   holdings: [NetworkHolding!]!
#   timestamp: BigInt!
#   event: MetricChangeEvent!

#   # TODO: Implement historical counters
#   allInvestments: Int!
#   activeInvestment: Int!
#   inactiveInvestments: Int!
#   activeFunds: Int!
#   inactiveFunds: Int!
#   activeInvestors: Int!
#   inactiveInvestors: Int!
# }

# type NetworkHolding @entity {
#   id: ID!
#   timestamp: BigInt!
#   asset: Asset!
#   quantity: BigInt!
# }

interface FundMetric {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  events: [MetricChangeEvent!]!
}

type FundSharesMetric implements FundMetric @entity {
  id: ID! # fund address + timestamp + 'shares'
  fund: Fund!
  timestamp: BigInt!
  shares: BigInt!
  events: [MetricChangeEvent!]!
}

type FundHoldingMetric implements FundMetric @entity {
  id: ID! # fund address + asset address + timestamp
  fund: Fund!
  timestamp: BigInt!
  asset: Asset!
  quantity: BigInt!
  events: [MetricChangeEvent!]!
}

type FundHoldingsMetric implements FundMetric @entity {
  id: ID! # fund address + timestamp + 'holdings'
  fund: Fund!
  timestamp: BigInt!
  holdings: [FundHoldingMetric!]!
  events: [MetricChangeEvent!]!
}

# type FundInvestmentsMetric implements FundMetric @entity {
#   id: ID!  # fund address + timestamp + 'investments'
#   fund: Fund!
#   timestamp: BigInt!
#   activeInvestments: Int!
#   inactiveInvestments: Int!
#   events: [Event!]!
# }

# type FundInvestorsMetric implements FundMetric @entity {
#   id: ID!  # fund address + timestamp + 'investors'
#   fund: Fund!
#   timestamp: BigInt!
#   activeInvestors: Int!
#   inactiveInvestors: Int!
#   events: [Event!]!
# }

type FundAggregatedMetric implements FundMetric @entity {
  id: ID! # fund address + timestamp
  fund: Fund!
  timestamp: BigInt!
  # investors: FundInvestorsMetric!
  # investments: FundInvestmentsMetric!
  shares: FundSharesMetric!
  holdings: FundHoldingsMetric!
  events: [MetricChangeEvent!]!
}

type Fund @entity {
  id: ID!
  name: String!
  version: Version!
  active: Boolean!
  manager: Account!
  inception: BigInt!
  investable: [Asset!]!
  events: [Event!]! @derivedFrom(field: "fund")
  investments: [Investment!]! @derivedFrom(field: "fund")
  policies: [Policy!]! @derivedFrom(field: "fund")
  fees: [Fee!]! @derivedFrom(field: "fund")
  trades: [Trade!]! @derivedFrom(field: "fund")
  metrics: FundAggregatedMetric!
  historicalMetrics: [FundAggregatedMetric!]! @derivedFrom(field: "fund")
  historicalShares: [FundSharesMetric!]! @derivedFrom(field: "fund")
  historicalHoldings: [FundHoldingsMetric!]! @derivedFrom(field: "fund")
  # historicalInvestments: [FundInvestmentsMetric!]! @derivedFrom(field: "fund")
}

interface Fee {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
}

type CustomFee implements Fee @entity {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
}

type PerformanceFee implements Fee @entity {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
  rate: BigDecimal!
  period: BigInt!
}

type ManagementFee implements Fee @entity {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
  rate: BigDecimal!
}

interface Policy {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type CustomPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type UserWhitelistPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type PriceTolerancePolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type MaxPositionsPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type MaxConcentrationPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type AssetBlacklistPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type AssetWhitelistPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

interface MetricChangeEvent {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  transaction: String!
}

# interface InvestmentChangeEvent extends MetricChangeEvent
interface InvestmentChangeEvent {
  id: ID!
  fund: Fund!
  type: InvestmentChangeEventTypeEnum!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentAddition implements MetricChangeEvent & InvestmentChangeEvent @entity {
  id: ID!
  type: InvestmentChangeEventTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  asset: Asset!
  quantity: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentRedemption implements MetricChangeEvent & InvestmentChangeEvent @entity {
  id: ID!
  type: InvestmentChangeEventTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  assets: [Asset!]!
  quantities: [BigInt!]!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentReward implements MetricChangeEvent & InvestmentChangeEvent @entity {
  id: ID!
  type: InvestmentChangeEventTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentRequest @entity {
  id: ID!
  fund: Fund!
  investor: Account!
  asset: Asset!
  quantity: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type Investment @entity {
  id: ID!
  fund: Fund!
  investor: Account!
  changes: [InvestmentChangeEvent!]! @derivedFrom(field: "investment")
  shares: BigInt!
}

type Account @entity {
  id: ID!
  manager: Boolean!
  managements: [Fund!]! @derivedFrom(field: "manager")
  investor: Boolean!
  investments: [Investment!]! @derivedFrom(field: "investor")
  requests: [Investment!]! @derivedFrom(field: "investor")
}

type Asset @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

interface Order {
  id: ID!
  fund: Fund!
  exchange: Exchange!
  timestamp: BigInt!
}

type Trade implements MetricChangeEvent & Order @entity {
  id: ID!
  fund: Fund!
  exchange: Exchange!
  timestamp: BigInt!
  methodName: String!
  assetSold: Asset
  assetBought: Asset
  amountSold: BigInt
  amountBought: BigInt
  transaction: String!
}

type CancelOrder implements Order @entity {
  id: ID!
  fund: Fund!
  exchange: Exchange!
  timestamp: BigInt!
}

type Exchange @entity {
  id: ID!
}
