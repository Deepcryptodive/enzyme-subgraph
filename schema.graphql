enum PolicyIdentifierEnum {
  CUSTOM
  MAX_CONCENTRATION
  MAX_POSITIONS
  PRICE_TOLERANCE
  USER_WHITELIST
  ASSET_BLACKLIST
  ASSET_WHITELIST
}

enum FeeIdentifierEnum {
  CUSTOM
  MANAGEMENT
  PERFORMANCE
}

enum InvestmentChangeTypeEnum {
  ADDITION
  REDEMPTION
  REWARD
}

type Event @entity {
  id: ID!
  version: Version!
  fund: Fund
  name: String!
  contract: String!
  hash: String!
  from: String!
  timestamp: BigInt!
  block: BigInt!
}

type Version @entity {
  id: ID!
  funds: [Fund!]! @derivedFrom(field: "version")
  events: [Event!]! @derivedFrom(field: "version")
  assets: [Asset!]!
}

type FundMetrics @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  shares: BigInt!
  holdings: [FundHolding!]!
}

type FundHolding @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  asset: Asset!
  quantity: BigInt!
}

type Fund @entity {
  id: ID!
  name: String!
  version: Version!
  active: Boolean!
  manager: Account!
  inception: BigInt!
  shares: BigInt!
  holdings: [FundHolding!]!
  investable: [Asset!]!
  events: [Event!]! @derivedFrom(field: "fund")
  investments: [Investment!]! @derivedFrom(field: "fund")
  policies: [Policy!]! @derivedFrom(field: "fund")
  fees: [Fee!]! @derivedFrom(field: "fund")
}

interface Fee {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
}

type CustomFee implements Fee @entity {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
}

type PerformanceFee implements Fee @entity {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
  rate: BigDecimal!
  period: BigInt!
}

type ManagementFee implements Fee @entity {
  id: ID!
  fund: Fund!
  identifier: FeeIdentifierEnum!
  rate: BigDecimal!
}

interface Policy {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type CustomPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type UserWhitelistPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type PriceTolerancePolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type MaxPositionsPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type MaxConcentrationPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type AssetBlacklistPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

type AssetWhitelistPolicy implements Policy @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  identifier: PolicyIdentifierEnum!
}

interface InvestmentChange {
  id: ID!
  type: InvestmentChangeTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentAddition implements InvestmentChange @entity {
  id: ID!
  type: InvestmentChangeTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  asset: Asset!
  quantity: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentRedemption implements InvestmentChange @entity {
  id: ID!
  type: InvestmentChangeTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  assets: [Asset!]!
  quantities: [BigInt!]!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentReward implements InvestmentChange @entity {
  id: ID!
  type: InvestmentChangeTypeEnum!
  fund: Fund!
  investor: Account!
  investment: Investment!
  shares: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type InvestmentRequest @entity {
  id: ID!
  fund: Fund!
  investor: Account!
  investment: Investment!
  asset: Asset!
  quantity: BigInt!
  timestamp: BigInt!
  transaction: String!
}

type Investment @entity {
  id: ID!
  fund: Fund!
  investor: Account!
  changes: [InvestmentChange!]! @derivedFrom(field: "investment")
  requests: [InvestmentRequest!]! @derivedFrom(field: "investment")
  shares: BigInt!
}

type Account @entity {
  id: ID!
  manager: Boolean!
  managements: [Fund!]! @derivedFrom(field: "manager")
  investor: Boolean!
  investments: [Investment!]! @derivedFrom(field: "investor")
}

type Asset @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}
