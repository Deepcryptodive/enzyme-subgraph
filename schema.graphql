#################################################
# Interfaces
#################################################

interface Event {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  timestamp: BigInt!
  transaction: Transaction!
}

interface NetworkEvent {
  id: ID!
  contract: String!
  timestamp: BigInt!
  transaction: Transaction!
}

interface SharesChange {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  investment: Investment!
  shares: BigDecimal!
  transaction: Transaction!
}

interface Metric {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  events: [Event!]!
}

#################################################
# Low-level fund event entities
#################################################

type FundCreation implements Event @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  timestamp: BigInt!
  transaction: Transaction!
}

type SharesAddition implements Event & SharesChange @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  investor: Account!
  investment: Investment!
  shares: BigDecimal!
  asset: Asset!
  quantity: BigDecimal!
  timestamp: BigInt!
  transaction: Transaction!
}

type SharesRedemption implements Event & SharesChange @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  investor: Account!
  investment: Investment!
  shares: BigDecimal!
  assets: [Asset!]!
  quantities: [BigDecimal!]!
  timestamp: BigInt!
  transaction: Transaction!
}

type SharesReward implements Event & SharesChange @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  investor: Account!
  investment: Investment!
  shares: BigDecimal!
  timestamp: BigInt!
  transaction: Transaction!
}

type AmguPayment implements Event @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  timestamp: BigInt!
  payer: Account!
  amount: BigDecimal!
  gas: Int!
  transaction: Transaction!
}

type TrackedAssetAddition implements Event @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  asset: Asset!
  timestamp: BigInt!
  transaction: Transaction!
}

type TrackedAssetRemoval implements Event @entity {
  id: ID!
  fund: Fund!
  account: Account!
  contract: String!
  asset: Asset!
  timestamp: BigInt!
  transaction: Transaction!
}

#################################################
# Low-level network event entities
#################################################

type FundDeployerSet implements NetworkEvent @entity {
  id: ID!
  contract: String!
  timestamp: BigInt!
  nextFundDeployer: FundDeployer!
  prevFundDeployer: FundDeployer
  transaction: Transaction!
}

type AmguPriceChange implements NetworkEvent @entity {
  id: ID!
  contract: String!
  timestamp: BigInt!
  price: BigDecimal!
  transaction: Transaction!
}

type MlnTokensBurn implements NetworkEvent @entity {
  id: ID!
  contract: String!
  timestamp: BigInt!
  amount: BigDecimal!
  transaction: Transaction!
}

#################################################
# High-level entities
#################################################

type Transaction @entity {
  id: ID!
  from: String!
  value: BigDecimal!
  timestamp: BigInt!
  block: BigInt!
  gasUsed: Int!
  gasPrice: BigDecimal!
  fundEvents: [Event!]! @derivedFrom(field: "transaction")
  networkEvents: [NetworkEvent!]! @derivedFrom(field: "transaction")
}

type FundDeployer @entity {
  id: ID!
  current: Boolean!
  currentStart: BigInt!
  currentEnd: BigInt
  funds: [Fund!]! @derivedFrom(field: "deployer")
}

type Comptroller @entity {
  id: ID!
}

type Fund @entity {
  id: ID!
  name: String!
  inception: BigInt!
  deployer: FundDeployer!
  status: String!
  manager: Account!
  denominationAsset: Asset!
  comptroller: Comptroller!
  trackedAssets: [Asset!]!
  shares: Share!
  sharesHistory: [Share!]! @derivedFrom(field: "fund")
  portfolio: Portfolio!
  portfolioHistory: [Portfolio!]! @derivedFrom(field: "fund")
  state: State!
  stateHistory: [State!]! @derivedFrom(field: "fund")
  events: [Event!]! @derivedFrom(field: "fund")
}

type Account @entity {
  id: ID!
  manager: Boolean!
  managements: [Fund!]! @derivedFrom(field: "manager")
  investor: Boolean!
  investments: [Investment!]! @derivedFrom(field: "investor")
  events: [Event!]! @derivedFrom(field: "account")
}

type Investment @entity {
  id: ID!
  fund: Fund!
  investor: Account!
  # changes: [SharesChange!]! @derivedFrom(field: "investment")
  shares: BigDecimal!
}

type Asset @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type Share implements Metric @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  shares: BigDecimal!
  events: [Event!]!
}

type Holding implements Metric @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  asset: Asset!
  quantity: BigDecimal!
  events: [Event!]!
}

type Portfolio implements Metric @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  holdings: [Holding!]!
  events: [Event!]!
}

type State implements Metric @entity {
  id: ID!
  fund: Fund!
  timestamp: BigInt!
  shares: Share!
  portfolio: Portfolio!
  # payouts: Payout!
  events: [Event!]!
}
