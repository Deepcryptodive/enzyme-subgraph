specVersion: 0.0.3
description: Melon protocol
repository: https://github.com/melonproject/melon-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - name: RegistryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{melonContracts.registry}}'
      abi: RegistryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Registry.ts
      entities:
        - Asset
        - Version
        - Registry
        - Engine
        - Contract
        - PriceSource
        - MlnToken
        - NativeAsset
      abis:
        - name: RegistryContract
          file: ./node_modules/@melonproject/protocol/out/Registry.abi.json
      eventHandlers:
        - event: VersionRegistration(indexed address)
          handler: handleVersionRegistration
        - event: AssetUpsert(indexed address,string,string,uint256,string,uint256,uint256[],bytes4[])
          handler: handleAssetUpsert
        - event: AssetRemoval(indexed address)
          handler: handleAssetRemoval
        - event: ExchangeAdapterUpsert(indexed address,indexed address,bool,bytes4[])
          handler: handleExchangeAdapterUpsert
        - event: ExchangeAdapterRemoval(indexed address)
          handler: handleExchangeAdapterRemoval
        - event: EngineChange(indexed address)
          handler: handleEngineChange
        - event: PriceSourceChange(indexed address)
          handler: handlePriceSourceChange
        - event: MlnTokenChange(indexed address)
          handler: handleMlnTokenChange
        - event: NativeAssetChange(indexed address)
          handler: handleNativeAssetChange
        - event: MGMChange(indexed address)
          handler: handleMGMChange
        - event: LogSetOwner(address)
          handler: handleLogSetOwner
  
  - name: EngineDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{melonContracts.engine}}'
      abi: EngineContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Engine.ts
      entities:
        - Engine
        - Registry
      abis:
        - name: EngineContract
          file: ./node_modules/@melonproject/protocol/out/Engine.abi.json
      eventHandlers:
        - event: SetAmguPrice(uint256)
          handler: handleSetAmguPrice
        - event: RegistryChange(address)
          handler: handleRegistryChange
        - event: AmguPaid(uint256)
          handler: handleAmguPaid
        - event: Thaw(uint256)
          handler: handleThaw
        - event: Burn(uint256)
          handler: handleBurn

  - name: PriceSourceDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{melonContracts.priceSource}}'
      abi: PriceSourceContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/PriceSource.ts
      entities:
        - State
        - Asset
        - AssetPriceUpdate
        - Fund
        - FundCalculationsHistory
        - NetworkValue
        - Investment
        - InvestmentValuationHistory
        - Investor
        - InvestorValuationHistory
      abis:
        - name: PriceSourceContract
          file: ./node_modules/@melonproject/protocol/out/KyberPriceFeed.abi.json
        - name: RegistryContract
          file: ./node_modules/@melonproject/protocol/out/Registry.abi.json
        - name: VersionContract
          file: ./node_modules/@melonproject/protocol/out/Version.abi.json
        - name: HubContract
          file: ./node_modules/@melonproject/protocol/out/Hub.abi.json
        - name: AccountingContract
          file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
        - name: SharesContract
          file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
        - name: ParticipationContract
          file: ./node_modules/@melonproject/protocol/out/Participation.abi.json
        - name: FeeManagerContract
          file: ./node_modules/@melonproject/protocol/out/FeeManager.abi.json
      eventHandlers:
        - event: PriceUpdate(address[],uint256[])
          handler: handlePriceUpdate

  # current version contract 
  - name: VersionDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{melonContracts.version}}'
      abi: VersionContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Version.ts
      entities:
        - Fund
        - FundCount
        - State
        - FundCalculationsHistory
      abis:
        - name: VersionContract
          file: ./node_modules/@melonproject/protocol/out/Version.abi.json
        - name: HubContract
          file: ./node_modules/@melonproject/protocol/out/Hub.abi.json
        - name: AccountingContract
          file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
        - name: SharesContract
          file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
      eventHandlers:
        - event: NewFund(indexed address,indexed address,address[12])
          handler: handleNewFund
    templates:
      - name: HubDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: HubContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Hub.ts
          entities:
            - Fund
            - FundCount
            - State
          abis:
            - name: HubContract
              file: ./node_modules/@melonproject/protocol/out/Hub.abi.json
          eventHandlers:
            - event: LogSetOwner(address)
              handler: handleLogSetOwner
            - event: FundShutDown()
              handler: handleFundShutDown

  # old Version Contract (first deployment)
  - name: VersionDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0xCB6c6Bdf0AA4cF0188518783b871931EFB64248f'
      abi: VersionContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Version.ts
      entities:
        - Fund
        - FundCount
        - State
        - FundCalculationsHistory
      abis:
        - name: VersionContract
          file: ./node_modules/@melonproject/protocol/out/Version.abi.json
        - name: HubContract
          file: ./node_modules/@melonproject/protocol/out/Hub.abi.json
        - name: AccountingContract
          file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
        - name: SharesContract
          file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
      eventHandlers:
        - event: NewFund(indexed address,indexed address,address[12])
          handler: handleNewFund
    templates:
      - name: HubDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: HubContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Hub.ts
          entities:
            - Fund
            - FundCount
            - State
          abis:
            - name: HubContract
              file: ./node_modules/@melonproject/protocol/out/Hub.abi.json
          eventHandlers:
            - event: FundShutDown()
              handler: handleFundShutDown

  
  - name: AccountingFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: AccountingFactoryContract
      address: '{{melonContracts.factories.accountingFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/AccountingFactory.ts
      entities:
        - Asset
        - Accounting
      abis:
        - name: AccountingFactoryContract
          file: ./node_modules/@melonproject/protocol/out/AccountingFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address,address,address[])
          handler: handleNewInstance
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance1
    templates:
      - name: AccountingDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: AccountingContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Accounting.ts
          entities:
            - Accounting
          abis:
            - name: AccountingContract
              file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
          eventHandlers:
            - event: AssetAddition(indexed address)
              handler: handleAssetAddition
            - event: AssetRemoval(indexed address)
              handler: handleAssetRemoval

  - name: FeeManagerFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: FeeManagerFactoryContract
      address: '{{melonContracts.factories.feeManagerFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/FeeManagerFactory.ts
      entities:
        - FeeManager
      abis:
        - name: FeeManagerFactoryContract
          file: ./node_modules/@melonproject/protocol/out/FeeManagerFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance
    templates:
      - name: FeeManagerDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: FeeManagerContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/FeeManager.ts
          entities:
            - FeeManager
            - ManagementFee
            - PerformanceFee
            - Fund
            - Investment
            - Investor
          abis:
            - name: FeeManagerContract
              file: ./node_modules/@melonproject/protocol/out/FeeManager.abi.json
            - name: ManagementFeeContract
              file: ./node_modules/@melonproject/protocol/out/ManagementFee.abi.json   
            - name: PerformanceFeeContract
              file: ./node_modules/@melonproject/protocol/out/PerformanceFee.abi.json  
            - name: HubContract
              file: ./node_modules/@melonproject/protocol/out/Hub.abi.json  
          eventHandlers:
            - event: FeeRegistration(address)
              handler: handleFeeRegistration
            - event: FeeReward(uint256)
              handler: handleFeeReward

  - name: ParticipationFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ParticipationFactoryContract
      address: '{{melonContracts.factories.participationFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/ParticipationFactory.ts
      entities:
        - Asset
        - Participation
      abis:
        - name: ParticipationFactoryContract
          file: ./node_modules/@melonproject/protocol/out/ParticipationFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address)
          handler: handleNewInstance
    templates:
      - name: ParticipationDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: ParticipationContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Participation.ts
          entities:
            - Asset
            - Participation
            - Investor
            - Investment
            - InvestmentRequest
            - Fund
            - InvestorCount
            - State
            - InvestmentHistory
            - FundHoldingsHistory
          abis:
            - name: ParticipationContract
              file: ./node_modules/@melonproject/protocol/out/Participation.abi.json
            - name: AccountingContract
              file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
            - name: SharesContract
              file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
            - name: HubContract
              file: ./node_modules/@melonproject/protocol/out/Hub.abi.json
            - name: PriceSourceContract
              file: ./node_modules/@melonproject/protocol/out/KyberPriceFeed.abi.json
          eventHandlers:
            - event: InvestmentRequest(indexed address,indexed address,uint256,uint256)
              handler: handleInvestmentRequest
            - event: RequestExecution(indexed address,indexed address,indexed address,uint256,uint256)
              handler: handleRequestExecution
            - event: CancelRequest(indexed address)
              handler: handleCancelRequest
            - event: Redemption(indexed address,address[],uint256[],uint256)
              handler: handleRedemption
            - event: EnableInvestment(address[])
              handler: handleEnableInvestment
            - event: DisableInvestment(address[])
              handler: handleDisableInvestment


  - name: PolicyManagerFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: PolicyManagerFactoryContract
      address: '{{melonContracts.factories.policyManagerFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/PolicyManagerFactory.ts
      entities:
        - PolicyManager
      abis:
        - name: PolicyManagerFactoryContract
          file: ./node_modules/@melonproject/protocol/out/PolicyManagerFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance
    templates:
      - name: PolicyManagerDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: PolicyManagerContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/PolicyManager.ts
          entities:
            - PolicyManager
            - Policy
          abis:
            - name: PolicyManagerContract
              file: ./node_modules/@melonproject/protocol/out/PolicyManager.abi.json
            - name: PolicyContract
              file: ./node_modules/@melonproject/protocol/out/Policy.abi.json
            - name: AssetBlackListContract
              file: ./node_modules/@melonproject/protocol/out/AssetBlackList.abi.json
            - name: AssetWhiteListContract
              file: ./node_modules/@melonproject/protocol/out/AssetWhiteList.abi.json
            - name: MaxConcentrationContract
              file: ./node_modules/@melonproject/protocol/out/MaxConcentration.abi.json
            - name: MaxPositionsContract
              file: ./node_modules/@melonproject/protocol/out/MaxPositions.abi.json
            - name: PriceToleranceContract
              file: ./node_modules/@melonproject/protocol/out/PriceTolerance.abi.json
          eventHandlers:
            - event: Registration(indexed bytes4,uint8,indexed address)
              handler: handleRegistration

  - name: SharesFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: SharesFactoryContract
      address: '{{melonContracts.factories.sharesFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/SharesFactory.ts
      entities:
        - Shares
      abis:
        - name: SharesFactoryContract
          file: ./node_modules/@melonproject/protocol/out/SharesFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance
    templates:
      - name: SharesDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: SharesContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Shares.ts
          entities:
            - Shares
          abis:
            - name: SharesContract
              file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
          eventHandlers:
            - event: Approval(indexed address,indexed address,uint256)
              handler: handleApproval
            - event: Transfer(indexed address,indexed address,uint256)
              handler: handleTransfer

  # current trading factory
  - name: TradingFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: TradingFactoryContract
      address: '{{melonContracts.factories.tradingFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/TradingFactory.ts
      entities:
        - Trading
      abis:
        - name: TradingFactoryContract
          file: ./node_modules/@melonproject/protocol/out/TradingFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address[],address)
          handler: handleNewInstance
    templates:
      - name: TradingDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: TradingContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Trading.ts
          entities:
            - Trading
          abis:
            - name: TradingContract
              file: ./node_modules/@melonproject/protocol/out/Trading.abi.json
            - name: AccountingContract
              file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
            - name: PriceSourceContract
              file: ./node_modules/@melonproject/protocol/out/KyberPriceFeed.abi.json
            - name: SharesContract
              file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
          eventHandlers:
            - event: ExchangeMethodCall(indexed address,indexed string,address[6],uint256[8],bytes32,bytes,bytes,bytes)
              handler: handleExchangeMethodCall

   # old trading factory
  - name: TradingFactoryDataSourceV101
    kind: ethereum/contract
    network: mainnet
    source:
      abi: TradingFactoryContractV101
      address: '0xe2c3fe25336eE3bD71dcA3380b7423a3bDef3d8C'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/TradingFactoryV101.ts
      entities:
        - Trading
      abis:
        - name: TradingFactoryContractV101
          file: ./node_modules/@melonproject/protocol-v.1.0.1/out/TradingFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address[],bool[],address)
          handler: handleNewInstance
    templates:
      - name: TradingDataSourceV101
        kind: ethereum/contract
        network: mainnet
        source:
          abi: TradingContractV101
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/TradingV101.ts
          entities:
            - Trading
          abis:
            - name: TradingContractV101
              file: ./node_modules/@melonproject/protocol-v.1.0.1/out/Trading.abi.json
            - name: AccountingContract
              file: ./node_modules/@melonproject/protocol/out/Accounting.abi.json
            - name: PriceSourceContract
              file: ./node_modules/@melonproject/protocol/out/KyberPriceFeed.abi.json
            - name: SharesContract
              file: ./node_modules/@melonproject/protocol/out/Shares.abi.json
          eventHandlers:
            - event: ExchangeMethodCall(indexed address,indexed string,address[6],uint256[8],bytes32,bytes,bytes,bytes)
              handler: handleExchangeMethodCall

  - name: VaultFactoryDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: VaultFactoryContract
      address: '{{melonContracts.factories.vaultFactory}}'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/VaultFactory.ts
      entities:
        - Vault
      abis:
        - name: VaultFactoryContract
          file: ./node_modules/@melonproject/protocol/out/VaultFactory.abi.json
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance
    templates:
      - name: VaultDataSource
        kind: ethereum/contract
        network: mainnet
        source:
          abi: VaultContract
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.3
          language: wasm/assemblyscript
          file: ./src/mappings/Vault.ts
          entities:
            - Vault
          abis:
            - name: VaultContract
              file: ./node_modules/@melonproject/protocol/out/Vault.abi.json